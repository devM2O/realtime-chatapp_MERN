{"ast":null,"code":"import { useEffect, useState } from 'react';\nconst PREFIX = 'whatsapp-clone-';\n\nconst useLocalStorage = (key, initialValue) => {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n};\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/home/ling/ReactProject/messaging-app-react-and-stock.io/client/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,MAAMC,MAAM,GAAG,iBAAf;;AACA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAC7C,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAI;AACrC,UAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAlB;AACA,QAAGG,SAAH,EAAc,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;AACd,QAAG,OAAOJ,YAAP,KAAwB,UAA3B,EAAsC;AACpC,aAAOA,YAAY,EAAnB;AACD,KAFD,MAEK;AACH,aAAOA,YAAP;AACD;AACF,GARiC,CAAlC;AAUAL,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAkCM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAlC;AACD,GAFQ,EAEN,CAACD,WAAD,EAAcC,KAAd,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD,CAlBD;;AAoBA,eAAeL,eAAf","sourcesContent":["import {useEffect, useState} from 'react'\n\nconst PREFIX = 'whatsapp-clone-'\nconst useLocalStorage = (key, initialValue) => {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(()=>{\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if(jsonValue) return JSON.parse(jsonValue)\n    if(typeof initialValue === 'function'){\n      return initialValue()\n    }else{\n      return initialValue\n    }\n  })\n\n  useEffect(()=>{\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n\nexport default useLocalStorage\n"]},"metadata":{},"sourceType":"module"}